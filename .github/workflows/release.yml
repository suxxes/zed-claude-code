name: Release & Publish

on:
  release:
    types: [created]
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to release (e.g., 1.0.1)'
        required: true
        type: string

permissions:
  contents: write
  packages: write

jobs:
  publish:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        registry-url: 'https://registry.npmjs.org'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Run tests
      run: npm test

    - name: Build project
      run: npm run build:prod

    - name: Set version (manual trigger)
      if: github.event_name == 'workflow_dispatch'
      run: npm version ${{ github.event.inputs.version }} --no-git-tag-version

    - name: Publish to npm
      run: npm publish --access public
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

    - name: Create or update GitHub release (manual trigger)
      if: github.event_name == 'workflow_dispatch'
      run: |
        # Check if release exists
        if gh release view v${{ github.event.inputs.version }} &>/dev/null; then
          echo "Release v${{ github.event.inputs.version }} exists, updating assets..."
          # Upload assets with --clobber to overwrite existing ones
          gh release upload v${{ github.event.inputs.version }} dist/**/* --clobber
        else
          echo "Creating new release v${{ github.event.inputs.version }}..."
          # Create new release with assets
          gh release create v${{ github.event.inputs.version }} \
            --title "Release v${{ github.event.inputs.version }}" \
            --generate-notes \
            dist/**/*
        fi
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
